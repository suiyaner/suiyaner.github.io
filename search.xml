<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2020/09/25/RedisTemplate/"/>
      <url>/2020/09/25/RedisTemplate/</url>
      
        <content type="html"><![CDATA[<h1 id="RedisTemplate"><a href="#RedisTemplate" class="headerlink" title="RedisTemplate"></a>RedisTemplate</h1><p>基于Jedis高度封装的redis操作框架</p><h3 id="POM-xml"><a href="#POM-xml" class="headerlink" title="POM.xml"></a>POM.xml</h3><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解决存入Redis乱码"><a href="#解决存入Redis乱码" class="headerlink" title="解决存入Redis乱码"></a>解决存入Redis乱码</h3><hr><p>存储前一定要进行非空验证，否则会出现一个深度为一万且除了清除所有Redis数据外无法删除的空文件夹，且文字乱码</p><blockquote><p>PS:这里的乱码无论是中文还是英文都会乱码 主要形式为unicode格式</p></blockquote><p>然后在一个添加了@Configuration 配置类下或启动类中，进行如下操作。</p><p>这项操作是为了把key和value进行序列化操作时，由默认的RedisSerializer改为StringRedisSerializer和GenericJackson2JsonRedisSerializer。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RedisTemplate <span class="title">redisTemplateInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置序列化Key的实例化对象</span></span><br><span class="line">    redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">    <span class="comment">//设置序列化Value的实例化对象</span></span><br><span class="line">    redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ServerResponse <span class="title">getVillageByRange</span><span class="params">(<span class="keyword">double</span> longitude, <span class="keyword">double</span> latitude)</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里加冒号的在redis中会变成一个文件夹 如: village/1,1</span></span><br><span class="line">    String key = <span class="keyword">new</span> String(<span class="string">&quot;village:&quot;</span>+longitude+<span class="string">&#x27;,&#x27;</span>+latitude);</span><br><span class="line">    <span class="comment">//判断是否寻找到指定key redis缓存</span></span><br><span class="line">    Set members = redisTemplate.opsForSet().members(key);</span><br><span class="line">    <span class="keyword">if</span>(members.size()!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ServerResponse.createBySuccess(members);</span><br><span class="line">    &#125;</span><br><span class="line">    SortedSet&lt;AppVillageVo&gt; neighPosition = findNeighPosition(longitude, latitude);</span><br><span class="line">    <span class="keyword">if</span>(neighPosition.size()==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ServerResponse.createByErrorMessage(<span class="string">&quot;查找范围出错.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加reids</span></span><br><span class="line">    redisTemplate.opsForSet().add(key,neighPosition);</span><br><span class="line">    <span class="comment">//设置redis过期时间为3天</span></span><br><span class="line">    redisTemplate.expire(key,<span class="number">3</span>, TimeUnit.DAYS);</span><br><span class="line">    <span class="keyword">return</span> ServerResponse.createBySuccess(neighPosition);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpirngBoot整合Mybatis-Plus</title>
      <link href="/2020/06/25/SpirngBoot%E6%95%B4%E5%90%88Mybatis-Plus/"/>
      <url>/2020/06/25/SpirngBoot%E6%95%B4%E5%90%88Mybatis-Plus/</url>
      
        <content type="html"><![CDATA[<p>这是一篇关于Mybatis-Plus的配置教程</p><a id="more"></a><h3 id="导入Maven包"><a href="#导入Maven包" class="headerlink" title="导入Maven包"></a>导入Maven包</h3><ul><li>这里的生成器模板引擎使用的是默认的Velocity模板引擎,可以根据需要自行更换模板</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis Plus Start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- End --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Mybatis Plus Generator Start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- End --&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Application-yml配置"><a href="#Application-yml配置" class="headerlink" title="Application.yml配置"></a>Application.yml配置</h3><ul><li><p>此配置可以自行选择是否使用.</p></li><li><p>就算Application.yml里面不添加以下代码,也可正常使用.</p></li><li><p>显示SQL语句可以在调用CRUD接口的时候显示调用的SQL语句.</p></li><li><p>逻辑删除是在用户中添置一项逻辑删除的参数,当为0是正常使用,为1时则被删除.</p></li></ul><p><code>@注:逻辑删除的本质是Update操作,逻辑删除并不是真正意义上的的删除操作，而是在把表中代表是否删除的字段 修改为删除状态,在逻辑数据上是被删除的,但是其数据依然存在于数据库中,只是在各种查询中查不到该用户.</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus:</span><br><span class="line">  configuration:</span><br><span class="line">    #显示SQL语句</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line">  global-config:</span><br><span class="line">    db-config:</span><br><span class="line">      logic-not-delete-value: 0 #逻辑删除 未被删除</span><br><span class="line">      logic-delete-value: 1 #逻辑删除 已被删除</span><br><span class="line">  mapper-locations: classpath:Mapper/*Mapper.xml //Mapper.xml文件路径</span><br></pre></td></tr></table></figure><hr><h3 id="启动类添加注解"><a href="#启动类添加注解" class="headerlink" title="启动类添加注解"></a>启动类添加注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//扫描mapper包 是mapper包,不是文件夹,继承了BaseMapper类的.java文件</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.admin.mapper&quot;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="Generator生成器配置"><a href="#Generator生成器配置" class="headerlink" title="Generator生成器配置"></a>Generator生成器配置</h3><ul><li>Velocity模板引擎生成器配置方案,可以根据需要自行配置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建Generator对象</span></span><br><span class="line">        AutoGenerator autoGenerator = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        <span class="comment">//数据源</span></span><br><span class="line">        DataSourceConfig dataSourceConfig = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dataSourceConfig.setDbType(DbType.MYSQL); <span class="comment">//数据库类型</span></span><br><span class="line">        dataSourceConfig.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>); <span class="comment">//数据库驱动</span></span><br><span class="line">        dataSourceConfig.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/heroes?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;serverTimezone=GMT&quot;</span>);</span><br><span class="line">        dataSourceConfig.setUsername(<span class="string">&quot;root&quot;</span>); <span class="comment">//用户名</span></span><br><span class="line">        dataSourceConfig.setPassword(<span class="string">&quot;root&quot;</span>); <span class="comment">//密码</span></span><br><span class="line">        autoGenerator.setDataSource(dataSourceConfig);</span><br><span class="line">        <span class="comment">//全局配置</span></span><br><span class="line">        GlobalConfig globalConfig = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        globalConfig.setOutputDir(System.getProperty(<span class="string">&quot;user.dir&quot;</span>)+<span class="string">&quot;/src/main/java&quot;</span>); <span class="comment">//创建路径</span></span><br><span class="line">        globalConfig.setOpen(<span class="keyword">false</span>); <span class="comment">//创建完成后自动打开文件夹</span></span><br><span class="line">        globalConfig.setAuthor(<span class="string">&quot;绥焰儿&quot;</span>); <span class="comment">//作者</span></span><br><span class="line">        globalConfig.setServiceName(<span class="string">&quot;%sService&quot;</span>); <span class="comment">//去除IService的I</span></span><br><span class="line">        globalConfig.setIdType(IdType.AUTO); <span class="comment">//设置ID自增</span></span><br><span class="line">        globalConfig.setBaseResultMap(<span class="keyword">true</span>); <span class="comment">//XML生成ResultMap</span></span><br><span class="line">        globalConfig.setSwagger2(<span class="keyword">true</span>);<span class="comment">//生成Swagger2注解</span></span><br><span class="line">        autoGenerator.setGlobalConfig(globalConfig);</span><br><span class="line">        <span class="comment">//包信息</span></span><br><span class="line">        PackageConfig packageConfig = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        packageConfig.setParent(<span class="string">&quot;com.project&quot;</span>); <span class="comment">//父包</span></span><br><span class="line">        packageConfig.setModuleName(<span class="string">&quot;generator&quot;</span>); <span class="comment">//生成的文件存放的包名</span></span><br><span class="line">        packageConfig.setController(<span class="string">&quot;controller&quot;</span>); <span class="comment">//controller的包名</span></span><br><span class="line">        packageConfig.setService(<span class="string">&quot;service&quot;</span>); <span class="comment">//生成的service文件夹名称</span></span><br><span class="line">        packageConfig.setServiceImpl(<span class="string">&quot;service.impl&quot;</span>); <span class="comment">//生成的service下的impl文件夹的名称</span></span><br><span class="line">        packageConfig.setMapper(<span class="string">&quot;mapper&quot;</span>); <span class="comment">//生成的mapper文件夹名称</span></span><br><span class="line">        packageConfig.setEntity(<span class="string">&quot;entity&quot;</span>); <span class="comment">//生成的entity名称</span></span><br><span class="line">        autoGenerator.setPackageInfo(packageConfig);</span><br><span class="line">        <span class="comment">//配置策略</span></span><br><span class="line">        StrategyConfig strategyConfig = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategyConfig.setEntityLombokModel(<span class="keyword">true</span>); <span class="comment">//启用LomBok</span></span><br><span class="line">        strategyConfig.setRestControllerStyle(<span class="keyword">true</span>); <span class="comment">//生成RestController</span></span><br><span class="line">        strategyConfig.setEntityTableFieldAnnotationEnable(<span class="keyword">true</span>); <span class="comment">//生成实体时，生成字段注解</span></span><br><span class="line">        strategyConfig.setNaming(NamingStrategy.underline_to_camel); <span class="comment">//启用下划线转驼峰命名法</span></span><br><span class="line">        strategyConfig.setColumnNaming(NamingStrategy.underline_to_camel); <span class="comment">//启用下划线转驼峰命名法</span></span><br><span class="line">        autoGenerator.setStrategy(strategyConfig);</span><br><span class="line">        autoGenerator.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="TableName-注解"><a href="#TableName-注解" class="headerlink" title="@TableName 注解"></a>@TableName 注解</h3><p>表名注解</p><ol><li>value 表名</li><li>schema</li><li>keepGlobalPrefix 是否保持使用全局的 tablePrefix 的值(如果设置了全局 tablePrefix 且自行设置了 value 的值)</li><li>resultMap xml 中 resultMap 的 id</li><li>autoResultMap 是否自动构建 resultMap 并使用(如果设置 resultMap 则不会进行 resultMap 的自动构建并注入)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@TableName(value = &quot;hero_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//...略</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="TableId-注解"><a href="#TableId-注解" class="headerlink" title="@TableId 注解"></a>@TableId 注解</h3><p>用来设置主键ID</p><ol><li>value 字段名</li><li>type 主键类型</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(value = &quot;User_Id&quot;, type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> Long userId;</span><br></pre></td></tr></table></figure><hr><h3 id="TableField-注解"><a href="#TableField-注解" class="headerlink" title="@TableField 注解"></a>@TableField 注解</h3><p>字段注解(非主键)</p><ol><li>value 字段名</li><li>…略</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(&quot;User_Name&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String userName;</span><br></pre></td></tr></table></figure><hr><h3 id="TableLogic-注解"><a href="#TableLogic-注解" class="headerlink" title="@TableLogic 注解"></a>@TableLogic 注解</h3><p>表字段逻辑处理注解（逻辑删除）</p><ol><li>value 字段名</li><li>delval 逻辑删除值 (已在yml配置过,无需配置)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="meta">@TableField(&quot;User_Deleted&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> userDeleted;</span><br></pre></td></tr></table></figure><hr><p>至于@Verision(乐观锁),@EnumValue(通枚举类注解)等自行查看官方文档</p><p><a href="https://mp.baomidou.com/guide/annotation.html">Mybatis-Plus 注解</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Mybatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
